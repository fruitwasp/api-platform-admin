import React from 'react';
import PropTypes from 'prop-types';
import type { EnumFieldProps } from './types.js';
declare const EnumField: {
    ({ transformEnum, source, ...props }: EnumFieldProps): JSX.Element | null;
    displayName: string;
    propTypes: {
        transformEnum: PropTypes.Requireable<(...args: any[]) => any>;
        component?: React.Validator<React.ElementType<any> | null | undefined> | undefined;
        sortBy?: React.Validator<string | null | undefined> | undefined;
        sortByOrder?: React.Validator<("ASC" | "DESC") | null | undefined> | undefined;
        source?: React.Validator<string | null | undefined> | undefined;
        label?: React.Validator<string | boolean | React.ReactElement<any, string | React.JSXElementConstructor<any>> | null | undefined> | undefined;
        sortable?: React.Validator<boolean | null | undefined> | undefined;
        className?: React.Validator<string | null | undefined> | undefined;
        cellClassName?: React.Validator<string | null | undefined> | undefined;
        headerClassName?: React.Validator<string | null | undefined> | undefined;
        formClassName?: React.Validator<string | null | undefined> | undefined;
        textAlign?: React.Validator<"right" | "left" | "center" | "inherit" | "justify" | null | undefined> | undefined;
        emptyText?: React.Validator<string | null | undefined> | undefined;
        fullWidth?: React.Validator<boolean | null | undefined> | undefined;
        record?: React.Validator<any> | undefined;
        resource?: React.Validator<string | null | undefined> | undefined;
        id?: React.Validator<string | null | undefined> | undefined;
        children?: React.Validator<React.ReactNode> | undefined;
        onBlur?: React.Validator<React.FocusEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onChange?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSubmit?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        style?: React.Validator<React.CSSProperties | null | undefined> | undefined;
        classes?: React.Validator<(Partial<import("@mui/material").TypographyClasses> & Partial<import("@mui/material").ClassNameMap<never>>) | null | undefined> | undefined;
        border?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<number | (string & {}) | "inset" | "hidden" | "-moz-initial" | "inherit" | "initial" | "revert" | "revert-layer" | "unset" | "aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" | "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" | "lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "rebeccapurple" | "red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato" | "transparent" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "ActiveBorder" | "ActiveCaption" | "AppWorkspace" | "Background" | "ButtonFace" | "ButtonHighlight" | "ButtonShadow" | "ButtonText" | "CaptionText" | "GrayText" | "Highlight" | "HighlightText" | "InactiveBorder" | "InactiveCaption" | "InactiveCaptionText" | "InfoBackground" | "InfoText" | "Menu" | "MenuText" | "Scrollbar" | "ThreeDDarkShadow" | "ThreeDFace" | "ThreeDHighlight" | "ThreeDLightShadow" | "ThreeDShadow" | "Window" | "WindowFrame" | "WindowText" | "currentcolor" | "none" | "medium" | "thick" | "thin" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid" | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<number | (string & {}) | "inset" | "hidden" | "-moz-initial" | "inherit" | "initial" | "revert" | "revert-layer" | "unset" | "aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" | "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" | "lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "rebeccapurple" | "red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato" | "transparent" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "ActiveBorder" | "ActiveCaption" | "AppWorkspace" | "Background" | "ButtonFace" | "ButtonHighlight" | "ButtonShadow" | "ButtonText" | "CaptionText" | "GrayText" | "Highlight" | "HighlightText" | "InactiveBorder" | "InactiveCaption" | "InactiveCaptionText" | "InfoBackground" | "InfoText" | "Menu" | "MenuText" | "Scrollbar" | "ThreeDDarkShadow" | "ThreeDFace" | "ThreeDHighlight" | "ThreeDLightShadow" | "ThreeDShadow" | "Window" | "WindowFrame" | "WindowText" | "currentcolor" | "none" | "medium" | "thick" | "thin" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | "solid" | undefined>) | null> | undefined;
        borderTop?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderTop<string | number> | NonNullable<import("csstype").Property.BorderTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderTop<string | number> | NonNullable<import("csstype").Property.BorderTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        borderRight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderRight<string | number> | NonNullable<import("csstype").Property.BorderRight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderRight<string | number> | NonNullable<import("csstype").Property.BorderRight<string | number> | undefined>[] | undefined>) | null> | undefined;
        borderBottom?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderBottom<string | number> | NonNullable<import("csstype").Property.BorderBottom<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderBottom<string | number> | NonNullable<import("csstype").Property.BorderBottom<string | number> | undefined>[] | undefined>) | null> | undefined;
        borderLeft?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderLeft<string | number> | NonNullable<import("csstype").Property.BorderLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderLeft<string | number> | NonNullable<import("csstype").Property.BorderLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        borderColor?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.BorderColor | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.BorderColor | undefined>) | null> | undefined;
        borderRadius?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderRadius<string | number> | NonNullable<import("csstype").Property.BorderRadius<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BorderRadius<string | number> | NonNullable<import("csstype").Property.BorderRadius<string | number> | undefined>[] | undefined>) | null> | undefined;
        display?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Display | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Display | undefined>) | null> | undefined;
        displayPrint?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Display | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Display | undefined>) | null> | undefined;
        overflow?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Overflow | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Overflow | undefined>) | null> | undefined;
        textOverflow?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.TextOverflow | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.TextOverflow | undefined>) | null> | undefined;
        visibility?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Visibility | NonNullable<import("csstype").Property.Visibility | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Visibility | NonNullable<import("csstype").Property.Visibility | undefined>[] | undefined>) | null> | undefined;
        whiteSpace?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.WhiteSpace | NonNullable<import("csstype").Property.WhiteSpace | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.WhiteSpace | NonNullable<import("csstype").Property.WhiteSpace | undefined>[] | undefined>) | null> | undefined;
        flexBasis?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexBasis<string | number> | NonNullable<import("csstype").Property.FlexBasis<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexBasis<string | number> | NonNullable<import("csstype").Property.FlexBasis<string | number> | undefined>[] | undefined>) | null> | undefined;
        flexDirection?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexDirection | NonNullable<import("csstype").Property.FlexDirection | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexDirection | NonNullable<import("csstype").Property.FlexDirection | undefined>[] | undefined>) | null> | undefined;
        flexWrap?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexWrap | NonNullable<import("csstype").Property.FlexWrap | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexWrap | NonNullable<import("csstype").Property.FlexWrap | undefined>[] | undefined>) | null> | undefined;
        justifyContent?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.JustifyContent | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.JustifyContent | undefined>) | null> | undefined;
        alignItems?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.AlignItems | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.AlignItems | undefined>) | null> | undefined;
        alignContent?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.AlignContent | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.AlignContent | undefined>) | null> | undefined;
        order?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Order | NonNullable<import("csstype").Property.Order | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Order | NonNullable<import("csstype").Property.Order | undefined>[] | undefined>) | null> | undefined;
        flex?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Flex<string | number> | NonNullable<import("csstype").Property.Flex<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Flex<string | number> | NonNullable<import("csstype").Property.Flex<string | number> | undefined>[] | undefined>) | null> | undefined;
        flexGrow?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexGrow | NonNullable<import("csstype").Property.FlexGrow | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexGrow | NonNullable<import("csstype").Property.FlexGrow | undefined>[] | undefined>) | null> | undefined;
        flexShrink?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexShrink | NonNullable<import("csstype").Property.FlexShrink | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FlexShrink | NonNullable<import("csstype").Property.FlexShrink | undefined>[] | undefined>) | null> | undefined;
        alignSelf?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.AlignSelf | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.AlignSelf | undefined>) | null> | undefined;
        justifyItems?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.JustifyItems | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.JustifyItems | undefined>) | null> | undefined;
        justifySelf?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.JustifySelf | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.JustifySelf | undefined>) | null> | undefined;
        gap?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Gap<string | number> | NonNullable<import("csstype").Property.Gap<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Gap<string | number> | NonNullable<import("csstype").Property.Gap<string | number> | undefined>[] | undefined>) | null> | undefined;
        columnGap?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.ColumnGap<string | number> | NonNullable<import("csstype").Property.ColumnGap<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.ColumnGap<string | number> | NonNullable<import("csstype").Property.ColumnGap<string | number> | undefined>[] | undefined>) | null> | undefined;
        rowGap?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.RowGap<string | number> | NonNullable<import("csstype").Property.RowGap<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.RowGap<string | number> | NonNullable<import("csstype").Property.RowGap<string | number> | undefined>[] | undefined>) | null> | undefined;
        gridColumn?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridColumn | NonNullable<import("csstype").Property.GridColumn | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridColumn | NonNullable<import("csstype").Property.GridColumn | undefined>[] | undefined>) | null> | undefined;
        gridRow?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridRow | NonNullable<import("csstype").Property.GridRow | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridRow | NonNullable<import("csstype").Property.GridRow | undefined>[] | undefined>) | null> | undefined;
        gridAutoFlow?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.GridAutoFlow | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.GridAutoFlow | undefined>) | null> | undefined;
        gridAutoColumns?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridAutoColumns<string | number> | NonNullable<import("csstype").Property.GridAutoColumns<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridAutoColumns<string | number> | NonNullable<import("csstype").Property.GridAutoColumns<string | number> | undefined>[] | undefined>) | null> | undefined;
        gridAutoRows?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridAutoRows<string | number> | NonNullable<import("csstype").Property.GridAutoRows<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridAutoRows<string | number> | NonNullable<import("csstype").Property.GridAutoRows<string | number> | undefined>[] | undefined>) | null> | undefined;
        gridTemplateColumns?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridTemplateColumns<string | number> | NonNullable<import("csstype").Property.GridTemplateColumns<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridTemplateColumns<string | number> | NonNullable<import("csstype").Property.GridTemplateColumns<string | number> | undefined>[] | undefined>) | null> | undefined;
        gridTemplateRows?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridTemplateRows<string | number> | NonNullable<import("csstype").Property.GridTemplateRows<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridTemplateRows<string | number> | NonNullable<import("csstype").Property.GridTemplateRows<string | number> | undefined>[] | undefined>) | null> | undefined;
        gridTemplateAreas?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.GridTemplateAreas | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.GridTemplateAreas | undefined>) | null> | undefined;
        gridArea?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridArea | NonNullable<import("csstype").Property.GridArea | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.GridArea | NonNullable<import("csstype").Property.GridArea | undefined>[] | undefined>) | null> | undefined;
        bgcolor?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.BackgroundColor | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.BackgroundColor | undefined>) | null> | undefined;
        color?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Color | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.Color | undefined>) | null> | undefined;
        zIndex?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string | (string & {}) | (number & {}) | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string | (string & {}) | (number & {}) | undefined>) | null> | undefined;
        position?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Position | NonNullable<import("csstype").Property.Position | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Position | NonNullable<import("csstype").Property.Position | undefined>[] | undefined>) | null> | undefined;
        top?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Top<string | number> | NonNullable<import("csstype").Property.Top<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Top<string | number> | NonNullable<import("csstype").Property.Top<string | number> | undefined>[] | undefined>) | null> | undefined;
        right?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Right<string | number> | NonNullable<import("csstype").Property.Right<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Right<string | number> | NonNullable<import("csstype").Property.Right<string | number> | undefined>[] | undefined>) | null> | undefined;
        bottom?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Bottom<string | number> | NonNullable<import("csstype").Property.Bottom<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Bottom<string | number> | NonNullable<import("csstype").Property.Bottom<string | number> | undefined>[] | undefined>) | null> | undefined;
        left?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Left<string | number> | NonNullable<import("csstype").Property.Left<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Left<string | number> | NonNullable<import("csstype").Property.Left<string | number> | undefined>[] | undefined>) | null> | undefined;
        boxShadow?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<number | import("csstype").Property.BoxShadow | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<number | import("csstype").Property.BoxShadow | undefined>) | null> | undefined;
        width?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Width<string | number> | NonNullable<import("csstype").Property.Width<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Width<string | number> | NonNullable<import("csstype").Property.Width<string | number> | undefined>[] | undefined>) | null> | undefined;
        maxWidth?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MaxWidth<string | number> | NonNullable<import("csstype").Property.MaxWidth<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MaxWidth<string | number> | NonNullable<import("csstype").Property.MaxWidth<string | number> | undefined>[] | undefined>) | null> | undefined;
        minWidth?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MinWidth<string | number> | NonNullable<import("csstype").Property.MinWidth<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MinWidth<string | number> | NonNullable<import("csstype").Property.MinWidth<string | number> | undefined>[] | undefined>) | null> | undefined;
        height?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Height<string | number> | NonNullable<import("csstype").Property.Height<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Height<string | number> | NonNullable<import("csstype").Property.Height<string | number> | undefined>[] | undefined>) | null> | undefined;
        maxHeight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MaxHeight<string | number> | NonNullable<import("csstype").Property.MaxHeight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MaxHeight<string | number> | NonNullable<import("csstype").Property.MaxHeight<string | number> | undefined>[] | undefined>) | null> | undefined;
        minHeight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MinHeight<string | number> | NonNullable<import("csstype").Property.MinHeight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MinHeight<string | number> | NonNullable<import("csstype").Property.MinHeight<string | number> | undefined>[] | undefined>) | null> | undefined;
        boxSizing?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BoxSizing | NonNullable<import("csstype").Property.BoxSizing | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.BoxSizing | NonNullable<import("csstype").Property.BoxSizing | undefined>[] | undefined>) | null> | undefined;
        m?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Margin<string | number> | NonNullable<import("csstype").Property.Margin<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Margin<string | number> | NonNullable<import("csstype").Property.Margin<string | number> | undefined>[] | undefined>) | null> | undefined;
        mt?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        mr?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginRight<string | number> | NonNullable<import("csstype").Property.MarginRight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginRight<string | number> | NonNullable<import("csstype").Property.MarginRight<string | number> | undefined>[] | undefined>) | null> | undefined;
        mb?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginBottom<string | number> | NonNullable<import("csstype").Property.MarginBottom<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginBottom<string | number> | NonNullable<import("csstype").Property.MarginBottom<string | number> | undefined>[] | undefined>) | null> | undefined;
        ml?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        mx?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        my?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        p?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Padding<string | number> | NonNullable<import("csstype").Property.Padding<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Padding<string | number> | NonNullable<import("csstype").Property.Padding<string | number> | undefined>[] | undefined>) | null> | undefined;
        pt?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        pr?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingRight<string | number> | NonNullable<import("csstype").Property.PaddingRight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingRight<string | number> | NonNullable<import("csstype").Property.PaddingRight<string | number> | undefined>[] | undefined>) | null> | undefined;
        pb?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingBottom<string | number> | NonNullable<import("csstype").Property.PaddingBottom<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingBottom<string | number> | NonNullable<import("csstype").Property.PaddingBottom<string | number> | undefined>[] | undefined>) | null> | undefined;
        pl?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        px?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        py?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        margin?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Margin<string | number> | NonNullable<import("csstype").Property.Margin<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Margin<string | number> | NonNullable<import("csstype").Property.Margin<string | number> | undefined>[] | undefined>) | null> | undefined;
        marginTop?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        marginRight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginRight<string | number> | NonNullable<import("csstype").Property.MarginRight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginRight<string | number> | NonNullable<import("csstype").Property.MarginRight<string | number> | undefined>[] | undefined>) | null> | undefined;
        marginBottom?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginBottom<string | number> | NonNullable<import("csstype").Property.MarginBottom<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginBottom<string | number> | NonNullable<import("csstype").Property.MarginBottom<string | number> | undefined>[] | undefined>) | null> | undefined;
        marginLeft?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        marginX?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginLeft<string | number> | NonNullable<import("csstype").Property.MarginLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        marginY?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.MarginTop<string | number> | NonNullable<import("csstype").Property.MarginTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        padding?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Padding<string | number> | NonNullable<import("csstype").Property.Padding<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.Padding<string | number> | NonNullable<import("csstype").Property.Padding<string | number> | undefined>[] | undefined>) | null> | undefined;
        paddingTop?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        paddingRight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingRight<string | number> | NonNullable<import("csstype").Property.PaddingRight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingRight<string | number> | NonNullable<import("csstype").Property.PaddingRight<string | number> | undefined>[] | undefined>) | null> | undefined;
        paddingBottom?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingBottom<string | number> | NonNullable<import("csstype").Property.PaddingBottom<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingBottom<string | number> | NonNullable<import("csstype").Property.PaddingBottom<string | number> | undefined>[] | undefined>) | null> | undefined;
        paddingLeft?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        paddingX?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingLeft<string | number> | NonNullable<import("csstype").Property.PaddingLeft<string | number> | undefined>[] | undefined>) | null> | undefined;
        paddingY?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.PaddingTop<string | number> | NonNullable<import("csstype").Property.PaddingTop<string | number> | undefined>[] | undefined>) | null> | undefined;
        typography?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string | undefined>) | null> | undefined;
        fontFamily?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.FontFamily | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.FontFamily | undefined>) | null> | undefined;
        fontSize?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FontSize<string | number> | NonNullable<import("csstype").Property.FontSize<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.FontSize<string | number> | NonNullable<import("csstype").Property.FontSize<string | number> | undefined>[] | undefined>) | null> | undefined;
        fontStyle?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.FontStyle | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string[] | import("csstype").Property.FontStyle | undefined>) | null> | undefined;
        fontWeight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string | (string & {}) | (number & {}) | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<string | (string & {}) | (number & {}) | undefined>) | null> | undefined;
        letterSpacing?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.LetterSpacing<string | number> | NonNullable<import("csstype").Property.LetterSpacing<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.LetterSpacing<string | number> | NonNullable<import("csstype").Property.LetterSpacing<string | number> | undefined>[] | undefined>) | null> | undefined;
        lineHeight?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.LineHeight<string | number> | NonNullable<import("csstype").Property.LineHeight<string | number> | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.LineHeight<string | number> | NonNullable<import("csstype").Property.LineHeight<string | number> | undefined>[] | undefined>) | null> | undefined;
        textTransform?: React.Validator<import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.TextTransform | NonNullable<import("csstype").Property.TextTransform | undefined>[] | undefined> | ((theme: import("@mui/material").Theme) => import("@mui/system/styleFunctionSx").ResponsiveStyleValue<import("csstype").Property.TextTransform | NonNullable<import("csstype").Property.TextTransform | undefined>[] | undefined>) | null> | undefined;
        content?: React.Validator<string | null | undefined> | undefined;
        translate?: React.Validator<"yes" | "no" | null | undefined> | undefined;
        sx?: React.Validator<import("@mui/system").SxProps<import("@mui/material").Theme> | undefined> | undefined;
        ref?: React.Validator<((instance: HTMLSpanElement | null) => void) | React.RefObject<HTMLSpanElement> | null | undefined> | undefined;
        slot?: React.Validator<string | null | undefined> | undefined;
        title?: React.Validator<string | null | undefined> | undefined;
        key?: React.Validator<React.Key | null | undefined> | undefined;
        defaultChecked?: React.Validator<boolean | null | undefined> | undefined;
        defaultValue?: React.Validator<string | number | readonly string[] | null | undefined> | undefined;
        suppressContentEditableWarning?: React.Validator<boolean | null | undefined> | undefined;
        suppressHydrationWarning?: React.Validator<boolean | null | undefined> | undefined;
        accessKey?: React.Validator<string | null | undefined> | undefined;
        autoFocus?: React.Validator<boolean | null | undefined> | undefined;
        contentEditable?: React.Validator<"inherit" | (boolean | "true" | "false") | null | undefined> | undefined;
        contextMenu?: React.Validator<string | null | undefined> | undefined;
        dir?: React.Validator<string | null | undefined> | undefined;
        draggable?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        hidden?: React.Validator<boolean | null | undefined> | undefined;
        lang?: React.Validator<string | null | undefined> | undefined;
        nonce?: React.Validator<string | null | undefined> | undefined;
        placeholder?: React.Validator<string | null | undefined> | undefined;
        spellCheck?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        tabIndex?: React.Validator<number | null | undefined> | undefined;
        radioGroup?: React.Validator<string | null | undefined> | undefined;
        role?: React.Validator<React.AriaRole | null | undefined> | undefined;
        about?: React.Validator<string | null | undefined> | undefined;
        datatype?: React.Validator<string | null | undefined> | undefined;
        inlist?: React.Validator<any> | undefined;
        prefix?: React.Validator<string | null | undefined> | undefined;
        property?: React.Validator<string | null | undefined> | undefined;
        rel?: React.Validator<string | null | undefined> | undefined;
        rev?: React.Validator<string | null | undefined> | undefined;
        typeof?: React.Validator<string | null | undefined> | undefined;
        vocab?: React.Validator<string | null | undefined> | undefined;
        autoCapitalize?: React.Validator<string | null | undefined> | undefined;
        autoCorrect?: React.Validator<string | null | undefined> | undefined;
        autoSave?: React.Validator<string | null | undefined> | undefined;
        itemProp?: React.Validator<string | null | undefined> | undefined;
        itemScope?: React.Validator<boolean | null | undefined> | undefined;
        itemType?: React.Validator<string | null | undefined> | undefined;
        itemID?: React.Validator<string | null | undefined> | undefined;
        itemRef?: React.Validator<string | null | undefined> | undefined;
        results?: React.Validator<number | null | undefined> | undefined;
        security?: React.Validator<string | null | undefined> | undefined;
        unselectable?: React.Validator<"on" | "off" | null | undefined> | undefined;
        inputMode?: React.Validator<"email" | "url" | "text" | "none" | "search" | "tel" | "numeric" | "decimal" | null | undefined> | undefined;
        is?: React.Validator<string | null | undefined> | undefined;
        'aria-activedescendant'?: React.Validator<string | null | undefined> | undefined;
        'aria-atomic'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-autocomplete'?: React.Validator<"list" | "none" | "inline" | "both" | null | undefined> | undefined;
        'aria-busy'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-checked'?: React.Validator<boolean | "true" | "false" | "mixed" | null | undefined> | undefined;
        'aria-colcount'?: React.Validator<number | null | undefined> | undefined;
        'aria-colindex'?: React.Validator<number | null | undefined> | undefined;
        'aria-colspan'?: React.Validator<number | null | undefined> | undefined;
        'aria-controls'?: React.Validator<string | null | undefined> | undefined;
        'aria-current'?: React.Validator<boolean | "date" | "page" | "time" | "true" | "false" | "step" | "location" | null | undefined> | undefined;
        'aria-describedby'?: React.Validator<string | null | undefined> | undefined;
        'aria-details'?: React.Validator<string | null | undefined> | undefined;
        'aria-disabled'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-dropeffect'?: React.Validator<"link" | "none" | "copy" | "execute" | "move" | "popup" | null | undefined> | undefined;
        'aria-errormessage'?: React.Validator<string | null | undefined> | undefined;
        'aria-expanded'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-flowto'?: React.Validator<string | null | undefined> | undefined;
        'aria-grabbed'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-haspopup'?: React.Validator<boolean | "grid" | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | null | undefined> | undefined;
        'aria-hidden'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-invalid'?: React.Validator<boolean | "true" | "false" | "grammar" | "spelling" | null | undefined> | undefined;
        'aria-keyshortcuts'?: React.Validator<string | null | undefined> | undefined;
        'aria-label'?: React.Validator<string | null | undefined> | undefined;
        'aria-labelledby'?: React.Validator<string | null | undefined> | undefined;
        'aria-level'?: React.Validator<number | null | undefined> | undefined;
        'aria-live'?: React.Validator<"off" | "assertive" | "polite" | null | undefined> | undefined;
        'aria-modal'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-multiline'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-multiselectable'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-orientation'?: React.Validator<"horizontal" | "vertical" | null | undefined> | undefined;
        'aria-owns'?: React.Validator<string | null | undefined> | undefined;
        'aria-placeholder'?: React.Validator<string | null | undefined> | undefined;
        'aria-posinset'?: React.Validator<number | null | undefined> | undefined;
        'aria-pressed'?: React.Validator<boolean | "true" | "false" | "mixed" | null | undefined> | undefined;
        'aria-readonly'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-relevant'?: React.Validator<"text" | "all" | "additions" | "additions removals" | "additions text" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | null | undefined> | undefined;
        'aria-required'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-roledescription'?: React.Validator<string | null | undefined> | undefined;
        'aria-rowcount'?: React.Validator<number | null | undefined> | undefined;
        'aria-rowindex'?: React.Validator<number | null | undefined> | undefined;
        'aria-rowspan'?: React.Validator<number | null | undefined> | undefined;
        'aria-selected'?: React.Validator<(boolean | "true" | "false") | null | undefined> | undefined;
        'aria-setsize'?: React.Validator<number | null | undefined> | undefined;
        'aria-sort'?: React.Validator<"none" | "ascending" | "descending" | "other" | null | undefined> | undefined;
        'aria-valuemax'?: React.Validator<number | null | undefined> | undefined;
        'aria-valuemin'?: React.Validator<number | null | undefined> | undefined;
        'aria-valuenow'?: React.Validator<number | null | undefined> | undefined;
        'aria-valuetext'?: React.Validator<string | null | undefined> | undefined;
        dangerouslySetInnerHTML?: React.Validator<{
            __html: string | TrustedHTML;
        } | null | undefined> | undefined;
        onCopy?: React.Validator<React.ClipboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCopyCapture?: React.Validator<React.ClipboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCut?: React.Validator<React.ClipboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCutCapture?: React.Validator<React.ClipboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPaste?: React.Validator<React.ClipboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPasteCapture?: React.Validator<React.ClipboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCompositionEnd?: React.Validator<React.CompositionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCompositionEndCapture?: React.Validator<React.CompositionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCompositionStart?: React.Validator<React.CompositionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCompositionStartCapture?: React.Validator<React.CompositionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCompositionUpdate?: React.Validator<React.CompositionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCompositionUpdateCapture?: React.Validator<React.CompositionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onFocus?: React.Validator<React.FocusEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onFocusCapture?: React.Validator<React.FocusEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onBlurCapture?: React.Validator<React.FocusEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onChangeCapture?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onBeforeInput?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onBeforeInputCapture?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onInput?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onInputCapture?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onReset?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onResetCapture?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSubmitCapture?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onInvalid?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onInvalidCapture?: React.Validator<React.FormEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoad?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onError?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onErrorCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onKeyDown?: React.Validator<React.KeyboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onKeyDownCapture?: React.Validator<React.KeyboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onKeyPress?: React.Validator<React.KeyboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onKeyPressCapture?: React.Validator<React.KeyboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onKeyUp?: React.Validator<React.KeyboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onKeyUpCapture?: React.Validator<React.KeyboardEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAbort?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAbortCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCanPlay?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCanPlayCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCanPlayThrough?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onCanPlayThroughCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDurationChange?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDurationChangeCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onEmptied?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onEmptiedCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onEncrypted?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onEncryptedCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onEnded?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onEndedCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadedData?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadedDataCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadedMetadata?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadedMetadataCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadStart?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLoadStartCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPause?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPauseCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPlay?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPlayCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPlaying?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPlayingCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onProgress?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onProgressCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onRateChange?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onRateChangeCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onResize?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onResizeCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSeeked?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSeekedCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSeeking?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSeekingCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onStalled?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onStalledCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSuspend?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSuspendCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTimeUpdate?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTimeUpdateCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onVolumeChange?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onVolumeChangeCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onWaiting?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onWaitingCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAuxClick?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAuxClickCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onClick?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onClickCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onContextMenu?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onContextMenuCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDoubleClick?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDoubleClickCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDrag?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragEnd?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragEndCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragEnter?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragEnterCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragExit?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragExitCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragLeave?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragLeaveCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragOver?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragOverCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragStart?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDragStartCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDrop?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onDropCapture?: React.Validator<React.DragEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseDown?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseDownCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseEnter?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseLeave?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseMove?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseMoveCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseOut?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseOutCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseOver?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseOverCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseUp?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onMouseUpCapture?: React.Validator<React.MouseEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSelect?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onSelectCapture?: React.Validator<React.ReactEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchCancel?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchCancelCapture?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchEnd?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchEndCapture?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchMove?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchMoveCapture?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchStart?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTouchStartCapture?: React.Validator<React.TouchEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerDown?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerDownCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerMove?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerMoveCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerUp?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerUpCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerCancel?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerCancelCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerEnter?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerEnterCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerLeave?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerLeaveCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerOver?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerOverCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerOut?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onPointerOutCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onGotPointerCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onGotPointerCaptureCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLostPointerCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onLostPointerCaptureCapture?: React.Validator<React.PointerEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onScroll?: React.Validator<React.UIEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onScrollCapture?: React.Validator<React.UIEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onWheel?: React.Validator<React.WheelEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onWheelCapture?: React.Validator<React.WheelEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAnimationStart?: React.Validator<React.AnimationEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAnimationStartCapture?: React.Validator<React.AnimationEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAnimationEnd?: React.Validator<React.AnimationEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAnimationEndCapture?: React.Validator<React.AnimationEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAnimationIteration?: React.Validator<React.AnimationEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onAnimationIterationCapture?: React.Validator<React.AnimationEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTransitionEnd?: React.Validator<React.TransitionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        onTransitionEndCapture?: React.Validator<React.TransitionEventHandler<HTMLSpanElement> | null | undefined> | undefined;
        align?: React.Validator<"right" | "left" | "center" | "inherit" | "justify" | null | undefined> | undefined;
        variant?: React.Validator<"button" | "caption" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "inherit" | "subtitle1" | "subtitle2" | "body1" | "body2" | "overline" | null | undefined> | undefined;
        gutterBottom?: React.Validator<boolean | null | undefined> | undefined;
        noWrap?: React.Validator<boolean | null | undefined> | undefined;
        paragraph?: React.Validator<boolean | null | undefined> | undefined;
        variantMapping?: React.Validator<Partial<Record<"button" | "caption" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "inherit" | "subtitle1" | "subtitle2" | "body1" | "body2" | "overline", string>> | null | undefined> | undefined;
    };
};
export default EnumField;
//# sourceMappingURL=EnumField.d.ts.map